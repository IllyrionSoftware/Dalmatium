name: Illyrion CI/CD
run-name: "Illyrion CI/CD"

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '.deploy')
    environment:
      name: ${{ github.ref_name }}
      url: ${{ steps.upload_package.outputs.artifact-url }}
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@main

      - id: setup_python
        name: Setup Python
        uses: actions/setup-python@main
        with:
          python-version: "3.12"

      - id: get_version
        name: Get Version
        run: echo "VERSION=$(python setup.py --version)" >> $GITHUB_OUTPUT

      - id: upload_package
        name: Upload Package
        uses: actions/upload-artifact@main
        with:
          name: package
          path: dist

  test:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    steps:
      - id: download_package
        name: Download Package
        uses: actions/download-artifact@main
        with:
          name: package

      - id: run_tests
        name: Run Tests
        run: python -m unittest discover

  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
      url: ${{ steps.create_release.outputs.url }}
    steps:
      - id: download_package
        name: Download Package
        uses: actions/download-artifact@main
        with:
          name: package

      - id: create_release
        name: Create Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: ${{ contains(github.event.head_commit.message, '.draft') }}
          generate_release_notes: true
          prerelease: ${{ contains(github.event.head_commit.message, '.pre') }}
          tag_name: ${{ needs.build.outputs.VERSION }}

  publish:
    needs: [build, test, release]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
      url: ${{ steps.upload_to_pypi.outputs.url }}
    permissions:
      id-token: write
    steps:
      - id: download_package
        name: Download Package
        uses: actions/download-artifact@main
        with:
          name: package
          path: dist

      - id: list_dist_contents
        name: List dist contents
        run: ls dist/

      - id: upload_to_pypi
        name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.8
